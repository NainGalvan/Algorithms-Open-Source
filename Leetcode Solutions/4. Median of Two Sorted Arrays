#include<bits/stdc++.h>
using namespace std;
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        
        int m=nums1.size();
        int n=nums2.size();
        if(m>n){
            return findMedianSortedArrays(nums2,nums1);
        }
        int lo=0,hi=m,mid1,mid2;
        while(lo<=hi){
            mid1=(lo+hi)/2;
            mid2=(m+n+1)/2-mid1;
            
            int maxlx,maxly,minrx,minry;
            maxlx=(mid1==0)?INT_MIN:nums1[mid1-1];
            minrx=(mid1==m)?INT_MAX:nums1[mid1];
            
            maxly=(mid2==0)?INT_MIN:nums2[mid2-1];
            minry=(mid2==n)?INT_MAX:nums2[mid2];
            
            if(maxlx<=minry&&maxly<=minrx){
                if((m+n)%2==1)
                    return double(max(maxlx,maxly));
                else
                    return double(max(maxlx,maxly)+min(minry,minrx))/2.0;
            }
            else if(maxlx>minry)
                hi=mid1-1;
            else
                lo=mid1+1;
        
        }
        return 0;
        
    }
};